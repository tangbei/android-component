apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android['compileSdkVersion']
    buildToolsVersion rootProject.ext.android['buildToolsVersion']

    defaultConfig {
        applicationId rootProject.ext.android['applicationId']
        minSdkVersion rootProject.ext.android['minSdkVersion']
        targetSdkVersion rootProject.ext.android['targetSdkVersion']
        versionCode rootProject.ext.android['versionCode']
        versionName rootProject.ext.android['versionName']
        flavorDimensions "default"

        //65535问题
        multiDexEnabled rootProject.ext.android['multiDexEnabled']

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //阿里路由框架集成
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        release {
            storeFile file("../tangbei.jks")
            storePassword "123456"
            keyAlias "itangbei"
            keyPassword "123456"
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled rootProject.ext.android['minifyEnabled']
            zipAlignEnabled rootProject.ext.android['zipAlignEnabled']
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            applicationIdSuffix ".dev"//给包名添加后缀形成新的测试环境包名
            resValue ("integer", "ENVIRONMENT", "0")//自定义环境变量
            manifestPlaceholders = [
                    app_name : rootProject.ext.android['app_name'] + "开发",
//                    icon: "",
            ]
        }
        uat {
            debuggable true
            minifyEnabled rootProject.ext.android['minifyEnabled']
            zipAlignEnabled rootProject.ext.android['zipAlignEnabled']
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            applicationIdSuffix ".uat"//给包名添加后缀形成新的测试环境包名
            resValue ("integer", "ENVIRONMENT", "1")//自定义环境变量
            manifestPlaceholders = [
                    app_name : rootProject.ext.android['app_name'] + "测试",
//                    icon: ""
            ]
        }
        release {
            debuggable false
            minifyEnabled rootProject.ext.android['minifyEnabled']
            zipAlignEnabled rootProject.ext.android['zipAlignEnabled']
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            resValue ("integer", "ENVIRONMENT", "2")//自定义环境变量
            manifestPlaceholders = [
                    app_name : rootProject.ext.android['app_name'],
            ]
        }
    }

    //启用dataBinding
    dataBinding {
        enabled rootProject.ext.android['dataBinding']
    }

//    productFlavors {
//        //开发环境
//        develop {
//            buildConfigField "Integer", "ENV_TYPE", "1"
//            applicationId rootProject.ext.android['applicationId'] + ".develop"
//            manifestPlaceholders = [
//                    app_name : rootProject.ext.android['app_name'] + "开发",
//            ]
//        }
//        //测试环境
//        uat {
//            buildConfigField "Integer", "ENV_TYPE", "2"
//            applicationId rootProject.ext.android['applicationId'] + ".test"
//            manifestPlaceholders = [
//                    app_name : rootProject.ext.android['app_name'] + "测试",
//            ]
//        }
//        //生产环境
//        online {
//            buildConfigField "Integer", "ENV_TYPE", "3"
//            applicationId rootProject.ext.android['applicationId']
//            manifestPlaceholders = [
//                    app_name : rootProject.ext.android['app_name'],
//            ]
//        }
//    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    if (isBuildModule.toBoolean()){
        implementation project(path: ':common')
    }else {
        implementation project(path: ':main')
        implementation project(path: ':home')
        implementation project(path: ':live')
        implementation project(path: ':find')
        implementation project(path: ':news')
        implementation project(path: ':mine')
        implementation project(path: ':webview')
    }

    implementation rootProject.ext.dependencies['multidex']

    annotationProcessor rootProject.ext.dependencies['arouter-compiler']

    testImplementation rootProject.ext.dependencies['junit']
    androidTestImplementation rootProject.ext.dependencies['androidJunit']
    androidTestImplementation rootProject.ext.dependencies['espresso-core']
}
