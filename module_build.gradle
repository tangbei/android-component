/**
 * module的公共gradle
 */

//如果为true,则各个module为独立编译
if (isBuildModule.toBoolean()){
    apply plugin: 'com.android.application'
}else {
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion rootProject.ext.android['compileSdkVersion']
    buildToolsVersion rootProject.ext.android['buildToolsVersion']

    defaultConfig {
        minSdkVersion rootProject.ext.android['minSdkVersion']
        targetSdkVersion rootProject.ext.android['targetSdkVersion']
        versionCode rootProject.ext.android['versionCode']
        versionName rootProject.ext.android['versionName']

        //单元测试使用
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        //aar独立混淆配置，配置此项
        consumerProguardFiles 'proguard-rules.pro'

        //阿里路由框架集成
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    //资源配置
    sourceSets {
        main {
            if (isBuildModule.toBoolean()){
                //独立运行，则使用此manifest
                manifest.srcFile 'src/main/manitest/AndroidManifest.xml'
            }else {
                //合并运行
                manifest.srcFile 'src/main/AndroidManifest.xml'
                resources {
                    //合并运行时，排除manitest下的所有调试文件
                    exclude 'src/main/manitest/*'
                }
            }
        }
    }

    signingConfigs {
        release {
            storeFile file("tangbei.jks")
            storePassword "123456"
            keyAlias "itangbei"
            keyPassword "123456"
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled rootProject.ext.android['minifyEnabled']
            zipAlignEnabled rootProject.ext.android['zipAlignEnabled']
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        }
        release {
            debuggable false
            minifyEnabled rootProject.ext.android['minifyEnabled']
            zipAlignEnabled rootProject.ext.android['zipAlignEnabled']
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    //启用dataBinding
    dataBinding {
        enabled rootProject.ext.android['dataBinding']
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    api project(path: ':common')

    annotationProcessor rootProject.ext.dependencies['arouter-compiler']

    testImplementation rootProject.ext.dependencies['junit']
    androidTestImplementation rootProject.ext.dependencies['androidJunit']
    androidTestImplementation rootProject.ext.dependencies['espresso-core']
}